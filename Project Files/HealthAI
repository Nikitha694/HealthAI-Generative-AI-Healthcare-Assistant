# STEP 1: Install libraries
!pip install gradio transformers accelerate

# STEP 2: Load model
from transformers import AutoTokenizer, AutoModelForCausalLM, pipeline
import gradio as gr

from transformers import AutoTokenizer, AutoModelForCausalLM, pipeline
model_name = "ibm-granite/granite-3.3-2b-instruct"
hf_token="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"
tokenizer = AutoTokenizer.from_pretrained(model_name,token=hf_token)
model = AutoModelForCausalLM.from_pretrained(model_name, token=hf_token , device_map="auto",trust_remote_code=True)

generator=pipeline("text-generation", model=model, tokenizer=tokenizer)
generator=pipeline("text-generation", model=model, tokenizer=tokenizer)



def identify_disease(symptoms):
    prompt = f"Given the symptoms: {symptoms}, identify the possible disease."
    result=generator(prompt,max_new_tokens=100)[0]['generated_text']
    return result.split(prompt)[-1].strip()

def home_remedies(disease):
    prompt = f"Suggest natural home remedies for the disease: {disease}."
    result=generator(prompt,max_new_tokens=100)[0]['generated_text']
    return result.split(prompt)[-1].strip()

def health_query(question):
    prompt = f"As a health assistant, answer the following question clearly:\nQuestion: {question}"
    result = generator(prompt, max_new_tokens=150)[0]['generated_text']
    return result.split(prompt)[-1].strip()


with gr.Blocks() as demo:
    gr.Markdown("# ðŸ§  HealthAI - Your Personal AI Health Assistant")

    with gr.Tab("ðŸ©º Symptoms Identifier"):
        symptoms_input = gr.Textbox(label="Enter your symptoms")
        disease_output = gr.Textbox(label="Predicted Disease")
        symptoms_button = gr.Button("Predict Disease")
        symptoms_button.click(fn=identify_disease, inputs=symptoms_input, outputs=disease_output)

    with gr.Tab("ðŸŒ¿ Home Remedies"):
        disease_input = gr.Textbox(label="Enter Disease")
        remedy_output = gr.Textbox(label="Home Remedy")
        remedy_button = gr.Button("Get Remedy")
        remedy_button.click(fn=home_remedies, inputs=disease_input, outputs=remedy_output)

    with gr.Tab("ðŸ¤– Ask a Health Question"):
        user_question = gr.Textbox(label="Ask a health-related question", placeholder="e.g., How to prevent diabetes?")
        answer_output = gr.Textbox(label="AI Answer")
        ask_button = gr.Button("Get Answer")
        ask_button.click(fn=health_query, inputs=user_question, outputs=answer_output)
demo.launch()
